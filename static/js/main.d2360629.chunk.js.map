{"version":3,"sources":["api/index.js","notification/provider.js","notification/hook.js","auth/index.js","store/index.js","component/AppBanner.js","component/SortMenu.js","component/Navigation.js","layouts/HomeLayoutRoute.js","component/EditListDialog.js","component/CollapseCardExpand.js","component/CollapseCard.js","component/DeleteListDialog.js","pages/HomePage.js","pages/CommunityPage.js","pages/UserPage.js","pages/AllPage.js","component/Copyright.js","pages/SplashScreen.js","pages/LoginScreen.js","pages/RegisterScreen.js","notification/index.js","App.js","reportWebVitals.js","index.js"],"names":["axios","defaults","withCredentials","api","create","baseURL","apiInstance","apis","getAllYourTop5Lists","params","get","getAllTop5ListsPublished","getAllTop5ListsPublishedByUsername","getAllTop5ListsCommunity","createTop5List","payload","post","saveTop5ListById","id","put","publishTop5ListById","deleteTop5ListById","delete","likeOrDislikeTop5ListById","increaseViewsTop5ListById","commentOnTop5ListById","getLoggedIn","registerUser","loginUser","logoutUser","NotificationContext","createContext","NotificationProvider","children","useState","message","status","error","setError","contextValue","addError","useCallback","removeError","Provider","value","useNotification","useContext","AuthContext","AuthActionType","AuthContextProvider","props","user","loggedIn","auth","setAuth","history","useHistory","useEffect","authReducer","action","type","then","response","data","success","userData","store","push","a","GlobalStoreContext","GlobalStoreActionType","GlobalStoreContextProvider","yourList","userList","allList","communityList","currentList","search","sort","listMarkedForDeletion","setStore","location","useLocation","console","log","interceptor","interceptors","use","headers","request","Promise","reject","eject","storeReducer","prevState","clearSearchAndSort","setSearchKeyword","setSortType","sortType","setCurrentListForEdit","newList","createNewList","name","items","top5List","loadYourList","loadCommunityList","listArray","catch","loadAllList","loadUserList","reloadCurrentLists","pathname","markListForDeletion","deleteList","deleteMarkedList","_id","unmarkListForDeletion","saveCurrentList","listName","listItems","publishTop5List","likeOrDislike","increaseViews","commentOnTop5List","comment","AppBanner","anchorEl","setAnchorEl","isMenuOpen","Boolean","handleProfileMenuOpen","event","currentTarget","handleMenuClose","menuId","loggedOutMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","loggedInMenu","menu","Box","className","sx","flexGrow","AppBar","position","Toolbar","height","Typography","variant","noWrap","component","display","xs","sm","style","textDecoration","color","to","md","Button","size","edge","firstName","charAt","toUpperCase","lastName","IconButton","SortMenu","React","handleClose","handleSort","alignItems","textAlign","marginLeft","Tooltip","title","mx","SortOutlined","PaperProps","elevation","overflow","filter","mt","width","ml","mr","content","top","right","bgcolor","transform","zIndex","selected","Navigation","routeMatch","patterns","i","length","pattern","possibleMatch","matchPath","path","exact","strict","useRouteMatch","currentTab","keyword","setKeyword","Tabs","Tab","icon","fontSize","Link","disabled","TextField","onChange","target","onKeyPress","code","handleSearch","marginTop","margin","HomeLayout","HomeLayoutRoute","Component","rest","render","EditListDialog","handleSave","setTitle","setItems","titleNotEmpty","itemsSomeNotEmpty","some","item","enableSave","itemsEveryNotEmpty","every","enablePublish","Dialog","maxWidth","fullWidth","DialogTitle","autoFocus","label","DialogContent","Stack","direction","spacing","map","flexDirection","justifyContent","padding","marginRight","backgroundColor","its","slice","handleUpdateItem","DialogActions","ListItemStyled","styled","Paper","theme","typography","body2","boxShadow","borderRadius","CommentItemStyled","yellow","A100","palette","text","secondary","CollapseCardExpand","expanded","list","disableActions","commentText","setCommentText","Collapse","in","timeout","unmountOnExit","CardContent","Grid","container","community","index","votes","published","flex","overflowY","comments","underline","username","paragraph","ExpandMore","expand","other","transition","transitions","duration","shortest","CollapseCard","showDelete","setExpanded","Card","marginBottom","CardHeader","startIcon","ThumbUp","likes","ThumbDown","dislikes","subheader","paddingBottom","CardActions","disableSpacing","textTransform","timestamp","date","Date","toLocaleDateString","toLocaleTimeString","dateString","publishedAt","views","DeleteListDialog","setName","HomePage","lists","handleClickOpen","pair","Fab","CommunityPage","UserPage","AllPage","Copyright","align","RouteLink","getFullYear","SplashScreen","createTheme","neutral","main","contrastText","background","CssBaseline","fontStyle","mb","LoginScreen","ThemeProvider","backgroundImage","backgroundRepeat","t","mode","grey","backgroundSize","backgroundPosition","square","my","Avatar","m","noValidate","onSubmit","preventDefault","FormData","email","password","required","autoComplete","RouterLink","RegisterScreen","handleSubmit","formData","passwordVerify","Container","useStyles","makeStyles","notificationAlert","Notification","classes","msg","setMsg","setType","s","Alert","severity","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2360629.chunk.js","sourcesContent":["/*\n    This is our http api, which we use to send requests to\n    our back-end API. Note we`re using the Axios library\n    for doing this, which is an easy to use AJAX-based\n    library. We could (and maybe should) use Fetch, which\n    is a native (to browsers) standard, but Axios is easier\n    to use when sending JSON back and forth and it`s a Promise-\n    based API which helps a lot with asynchronous communication.\n    \n    @author McKilla Gorilla\n*/\n\nimport axios from 'axios'\n\naxios.defaults.withCredentials = true;\n\nconst api = axios.create({\n    baseURL: 'http://localhost:4000/api',\n})\nexport const apiInstance = api;\n\n// THESE ARE ALL THE REQUESTS WE`LL BE MAKING, ALL REQUESTS HAVE A\n// REQUEST METHOD (like get) AND PATH (like /top5list). SOME ALSO\n// REQUIRE AN id SO THAT THE SERVER KNOWS ON WHICH LIST TO DO ITS\n// WORK, AND SOME REQUIRE DATA, WHICH WE CALL THE payload, FOR WHEN\n// WE NEED TO PUT THINGS INTO THE DATABASE OR IF WE HAVE SOME\n// CUSTOM FILTERS FOR QUERIES\n\nexport const createTop5List = (payload) => api.post(`/top5list/`, payload)\nexport const saveTop5ListById = (id, payload) => api.put(`/top5list/save/${id}`, payload)\nexport const publishTop5ListById = (id, payload) => api.post(`/top5list/publish/${id}`, payload)\nexport const deleteTop5ListById = (id) => api.delete(`/top5list/${id}`)\n\nexport const getAllYourTop5Lists = (params) => api.get(`/top5lists/my/`, {params})\nexport const getAllTop5ListsPublished = (params) => api.get(`/top5lists/all/`, {params})\nexport const getAllTop5ListsPublishedByUsername = (params) => api.get(`/top5lists/user/`, {params})\nexport const getAllTop5ListsCommunity = (params) => api.get(`/top5lists/community/`, {params})\n\nexport const likeOrDislikeTop5ListById = (id, payload) => api.post(`/top5list/like/${id}`, payload)\nexport const increaseViewsTop5ListById = (id) => api.post(`/top5list/views/increase/${id}`)\nexport const commentOnTop5ListById = (id, payload) => api.post(`/top5list/comment/${id}`, payload)\n\nexport const getLoggedIn = () => api.get(`/loggedIn/`);\nexport const registerUser = (payload) => api.post(`/register/`, payload)\nexport const loginUser = (payload) => api.post(`/login/`, payload)\nexport const logoutUser = () => api.get(`/logout/`)\n\nconst apis = {\n    // only your lists\n    getAllYourTop5Lists,\n    // all published lists\n    getAllTop5ListsPublished,\n    // search user's lists by username\n    getAllTop5ListsPublishedByUsername,\n    // all community lists\n    getAllTop5ListsCommunity,\n\n    createTop5List,\n    saveTop5ListById,\n    publishTop5ListById,\n    deleteTop5ListById,\n\n    likeOrDislikeTop5ListById,\n    increaseViewsTop5ListById,\n    commentOnTop5ListById,\n\n    getLoggedIn,\n    registerUser,\n    loginUser,\n    logoutUser\n}\n\nexport default apis\n","import React, {useState, useCallback, createContext} from 'react'\n\nconst NotificationContext = createContext()\n\n// export const NotificationContext = createContext({\n// // const NotificationContext = createContext({\n//     // error: null,\n//     // addError: () => {\n//     // },\n//     // removeError: () => {\n//     // },\n// })\n\nfunction NotificationProvider({children}) {\n    // const [error, setError] = useState(null)\n    const [error, setError] = useState({\n        message: '',\n        status: 'error',\n    })\n\n    // const removeError = () => setError(null)\n    const removeError = () => setError({\n        message: '',\n        status: 'error',\n    })\n\n    const addError = ({message, status}) => {\n        status = status ? status : 'error'\n\n        setError({message, status})\n    }\n\n    const contextValue = {\n        error,\n        addError: useCallback(({message, status}) => {\n            addError({message, status})\n\n            // console.log('useCallback, addError: ', {message, status})\n        }, []),\n        removeError: useCallback(() => removeError(), []),\n    }\n\n    return (\n        <NotificationContext.Provider value={contextValue}>\n            {children}\n        </NotificationContext.Provider>\n    )\n}\n\nexport {\n    NotificationContext,\n    NotificationProvider\n}","import {useContext} from 'react'\nimport {NotificationContext} from './provider'\n\nfunction useNotification() {\n    const {error, addError, removeError} = useContext(NotificationContext)\n    return {error, addError, removeError}\n}\n\nexport default useNotification","import React, { createContext, useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom'\nimport api from '../api'\nimport useNotification from \"../notification/hook\";\n\nconst AuthContext = createContext();\n// console.log(\"create AuthContext: \" + AuthContext);\n\n// THESE ARE ALL THE TYPES OF UPDATES TO OUR AUTH STATE THAT CAN BE PROCESSED\nexport const AuthActionType = {\n    GET_LOGGED_IN: \"GET_LOGGED_IN\",\n    REGISTER_USER: \"REGISTER_USER\",\n    LOGIN_USER: \"LOGIN_USER\",\n    LOGOUT_USER: \"LOGOUT_USER\",\n}\n\nfunction AuthContextProvider(props) {\n\n    const {addError} = useNotification()\n\n    const [auth, setAuth] = useState({\n        user: null,\n        loggedIn: false\n    });\n    const history = useHistory();\n\n    useEffect(() => {\n        auth.getLoggedIn();\n    }, []);\n\n    const authReducer = (action) => {\n        const { type, payload } = action;\n        switch (type) {\n            case AuthActionType.GET_LOGGED_IN: {\n                return setAuth({\n                    user: payload.user,\n                    loggedIn: payload.loggedIn\n                });\n            }\n            case AuthActionType.REGISTER_USER: {\n                return setAuth({\n                    user: payload.user,\n                    loggedIn: true\n                })\n            }\n            case AuthActionType.LOGIN_USER: {\n                return setAuth({\n                    user: payload.user,\n                    loggedIn: true\n                })\n            }\n            case AuthActionType.LOGOUT_USER: {\n                return setAuth({\n                    user: null,\n                    loggedIn: false,\n                })\n            }\n            default:\n                return auth;\n        }\n    }\n\n    auth.getLoggedIn = function () {\n        api.getLoggedIn()\n            .then(response => {\n                if (response.data.success === true) {\n                    authReducer({\n                        type: AuthActionType.GET_LOGGED_IN,\n                        payload: {\n                            loggedIn: response.data.data.loggedIn,\n                            user: response.data.data.user\n                        }\n                    });\n                }\n            })\n    }\n\n    auth.registerUser = function(userData, store) {\n        api.registerUser(userData)\n            .then(response => {\n\n                if (response.data.success === true) {\n                    // authReducer({\n                    //     type: AuthActionType.REGISTER_USER,\n                    //     payload: {\n                    //         user: response.data.user\n                    //     }\n                    // })\n                    // history.push(\"/\");\n                    // store.loadIdNamePairs();\n\n                    addError({\n                        message: response.data.message,\n                        status: 'success',\n                    })\n\n                    history.push(\"/login\")\n                }\n            })\n    }\n\n    auth.loginUser = function(userData, store) {\n        api.loginUser(userData)\n            .then(response => {\n                if (response.data.success === true) {\n                    authReducer({\n                        type: AuthActionType.LOGIN_USER,\n                        payload: {\n                            user: response.data.data.user\n                        }\n                    })\n\n                    addError({\n                        message: response.data.message,\n                        status: 'success',\n                    })\n\n                    history.push(\"/home\");\n                }\n            })\n    }\n\n    auth.logoutUser = async function(store) {\n        const response = await api.logoutUser();\n        if (response.status === 200) {\n            authReducer({\n                type: AuthActionType.LOGOUT_USER,\n                payload: {}\n            })\n            history.push('/');\n        }\n    }\n\n    return (\n        <AuthContext.Provider value={{\n            auth\n        }}>\n            {props.children}\n        </AuthContext.Provider>\n    );\n}\n\nexport default AuthContext;\nexport { AuthContextProvider };","import {createContext, useContext, useEffect, useState} from 'react'\nimport {useHistory, useLocation, useParams, useRouteMatch} from 'react-router-dom'\nimport api from '../api'\nimport AuthContext from '../auth'\nimport useNotification from \"../notification/hook\";\nimport {apiInstance} from '../api';\n/*\n    This is our global data store. Note that it uses the Flux design pattern,\n    which makes use of things like actions and reducers. \n    \n    @author McKilla Gorilla\n*/\n\n// THIS IS THE CONTEXT WE'LL USE TO SHARE OUR STORE\nexport const GlobalStoreContext = createContext({});\n\n// THESE ARE ALL THE TYPES OF UPDATES TO OUR GLOBAL\n// DATA STORE STATE THAT CAN BE PROCESSED\nexport const GlobalStoreActionType = {\n    LOAD_ALL_YOUR_LIST: \"LOAD_ALL_YOUR_LIST\",\n    // user lists\n    LOAD_ALL_USER_LIST: \"LOAD_ALL_USER_LIST\",\n    // all published\n    LOAD_ALL_PUBLISHED_LIST: \"LOAD_ALL_PUBLISHED_LIST\",\n    // community\n    LOAD_COMMUNITY_LIST: \"LOAD_COMMUNITY_LIST\",\n\n    MARK_LIST_FOR_DELETION: \"MARK_LIST_FOR_DELETION\",\n    UNMARK_LIST_FOR_DELETION: \"UNMARK_LIST_FOR_DELETION\",\n\n    SET_CURRENT_LIST: \"SET_CURRENT_LIST\",\n\n    SET_SEARCH_KEYWORD: \"SET_SEARCH_KEYWORD\",\n    SET_SORT_TYPE: \"SET_SORT_TYPE\",\n    CLEAR_SEARCH_AND_SORT: \"CLEAR_SEARCH_AND_SORT\",\n}\n\n// WE'LL NEED THIS TO PROCESS TRANSACTIONS\n// const tps = new jsTPS();\n\n// WITH THIS WE'RE MAKING OUR GLOBAL DATA STORE\n// AVAILABLE TO THE REST OF THE APPLICATION\nfunction GlobalStoreContextProvider(props) {\n    // THESE ARE ALL THE THINGS OUR DATA STORE WILL MANAGE\n    const [store, setStore] = useState({\n        yourList: [],\n\n        userList: [],\n\n        allList: [],\n\n        communityList: [],\n\n        currentList: null,\n\n        search: '',\n        // sort: '',\n        sort: 'date-desc',\n\n        listMarkedForDeletion: null\n    });\n\n    const history = useHistory();\n\n    const location = useLocation();\n\n    // SINCE WE'VE WRAPPED THE STORE IN THE AUTH CONTEXT WE CAN ACCESS THE USER HERE\n    const {auth} = useContext(AuthContext);\n\n    const {addError} = useNotification()\n\n    useEffect(() => {\n        console.log(\"App: useEffect:\")\n\n        const successHandler = function (response) {\n            // Any status code that lie within the range of 2xx cause this function to trigger\n            // Do something with response data\n            // console.log(response)\n\n            if (response.data.success === false) {\n                addError({\n                    message: response.data.message\n                })\n            } else {\n                // return response;\n            }\n\n            return response;\n        }\n        const errorHandler = function (error) {\n            // Any status codes that falls outside the range of 2xx cause this function to trigger\n            // Do something with response error\n            // console.log(\"interceptor:\", error)\n            // console.log(\"interceptor error status code:\", error.response.status)\n\n            if (error.response) {\n                // The request was made and the server responded with a status code\n                // that falls out of the range of 2xx\n                console.log(error.response.data);\n                console.log(error.response.status);\n                console.log(error.response.headers);\n\n                if (error.response.data.success === false) {\n                    addError({\n                        message: error.response.data.message,\n                    })\n                }\n\n            } else if (error.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                console.log(error.request);\n            } else {\n                // Something happened in setting up the request that triggered an Error\n                console.log('Error', error.message);\n            }\n            // console.log(error.config);\n\n            return Promise.reject(error);\n        }\n\n        // Add a response interceptor\n        const interceptor = apiInstance.interceptors.response.use(successHandler, errorHandler);\n        // Specify how to clean up after this effect:\n        return () => {\n            apiInstance.interceptors.response.eject(interceptor)\n        }\n\n    }, [addError])\n\n    // HERE'S THE DATA STORE'S REDUCER, IT MUST\n    // HANDLE EVERY TYPE OF STATE CHANGE\n    const storeReducer = (action) => {\n        const {type, payload} = action;\n        switch (type) {\n            // clear search and sort\n            case GlobalStoreActionType.CLEAR_SEARCH_AND_SORT: {\n                return setStore(prevState => ({\n                    ...prevState,\n\n                    search: '',\n                    // sort: '',\n                    sort: 'date-desc',\n                }))\n            }\n            // GET SEARCH KEYWORD\n            case GlobalStoreActionType.SET_SEARCH_KEYWORD: {\n                return setStore(prevState => ({\n                    ...prevState,\n\n                    search: payload\n                }))\n            }\n            // GET SORT TYPE\n            case GlobalStoreActionType.SET_SORT_TYPE: {\n                return setStore(prevState => ({\n                    ...prevState,\n\n                    sort: payload\n                }))\n            }\n            // GET COMMUNITY LISTS\n            case GlobalStoreActionType.LOAD_COMMUNITY_LIST: {\n                return setStore(prevState => ({\n                    ...prevState,\n\n                    communityList: payload\n                }))\n            }\n            // GET ALL PUBLISHED LISTS\n            case GlobalStoreActionType.LOAD_ALL_PUBLISHED_LIST: {\n                return setStore(prevState => ({\n                    ...prevState,\n\n                    allList: payload\n                }))\n            }\n            // GET ALL YOUR LISTS\n            case GlobalStoreActionType.LOAD_ALL_YOUR_LIST: {\n                return setStore(prevState => ({\n                    ...prevState,\n\n                    yourList: payload\n                }))\n            }\n            // GET ALL USER LISTS\n            case GlobalStoreActionType.LOAD_ALL_USER_LIST: {\n                return setStore(prevState => ({\n                    ...prevState,\n\n                    userList: payload\n                }))\n            }\n            // PREPARE TO DELETE A LIST\n            case GlobalStoreActionType.MARK_LIST_FOR_DELETION: {\n                return setStore(prevState => ({\n                    ...prevState,\n\n                    listMarkedForDeletion: payload\n                }))\n            }\n            // PREPARE TO DELETE A LIST\n            case GlobalStoreActionType.UNMARK_LIST_FOR_DELETION: {\n                return setStore(prevState => ({\n                    ...prevState,\n\n                    listMarkedForDeletion: null\n                }))\n            }\n            // UPDATE A LIST\n            case GlobalStoreActionType.SET_CURRENT_LIST: {\n                return setStore(prevState => ({\n                    ...prevState,\n\n                    currentList: payload,\n                }))\n            }\n            default:\n                return store;\n        }\n    }\n\n    // THESE ARE THE FUNCTIONS THAT WILL UPDATE OUR STORE AND\n    // DRIVE THE STATE OF THE APPLICATION. WE'LL CALL THESE IN \n    // RESPONSE TO EVENTS INSIDE OUR COMPONENTS.\n\n    store.clearSearchAndSort = function () {\n        storeReducer({\n                type: GlobalStoreActionType.CLEAR_SEARCH_AND_SORT,\n            }\n        )\n    }\n    store.setSearchKeyword = function (search) {\n        storeReducer({\n                // type: GlobalStoreActionType.CREATE_NEW_LIST,\n                type: GlobalStoreActionType.SET_SEARCH_KEYWORD,\n                payload: search\n            }\n        );\n    }\n    store.setSortType = function (sortType) {\n        storeReducer({\n                // type: GlobalStoreActionType.CREATE_NEW_LIST,\n                type: GlobalStoreActionType.SET_SORT_TYPE,\n                payload: sortType\n            }\n        );\n    }\n\n    store.setCurrentListForEdit = function (newList) {\n        storeReducer({\n                type: GlobalStoreActionType.SET_CURRENT_LIST,\n                payload: newList\n            }\n        );\n    }\n\n    // THIS FUNCTION CREATES A NEW LIST\n    store.createNewList = async function () {\n        // console.log(auth.user)\n\n        let payload = {\n            name: \"Untitled\",\n            items: [\"\", \"\", \"\", \"\", \"\"],\n        };\n        return api.createTop5List(payload)\n            .then(response => {\n                if (response.data.success === true) {\n                    let newList = response.data.data.top5List;\n\n                    store.setCurrentListForEdit(newList);\n\n                    store.loadYourList();\n\n                    // return newList._id;\n                }\n            })\n    }\n\n    // load all Community list\n    store.loadCommunityList = function () {\n        let search = store.search;\n        let sort = store.sort;\n\n        api.getAllTop5ListsCommunity({\n            search,\n            sort,\n        }).then((response) => {\n            // console.log(response)\n\n            if (response.data.success === true) {\n                let listArray = response.data.data;\n\n                storeReducer({\n                    type: GlobalStoreActionType.LOAD_COMMUNITY_LIST,\n                    payload: listArray\n                });\n            } else {\n                // console.log(\"API FAILED TO GET YOUR LIST\");\n            }\n        }).catch((error) => {\n\n        })\n    }\n\n    // load all published list\n    store.loadAllList = function () {\n        let search = store.search;\n        let sort = store.sort;\n\n        api.getAllTop5ListsPublished({\n            search,\n            sort,\n        }).then((response) => {\n            // console.log(response)\n            console.log(response.data.data)\n\n            if (response.data.success === true) {\n                let listArray = response.data.data;\n                storeReducer({\n                    type: GlobalStoreActionType.LOAD_ALL_PUBLISHED_LIST,\n                    payload: listArray\n                });\n            } else {\n                // console.log(\"API FAILED TO GET PUBLISHED LIST\");\n            }\n        }).catch(error => {\n            // console.error(error)\n        })\n    }\n\n    // load all your list\n    store.loadYourList = async function () {\n        let search = store.search;\n        let sort = store.sort;\n\n        api.getAllYourTop5Lists({\n            search,\n            sort,\n        }).then((response) => {\n            // console.log(response)\n\n            if (response.data.success === true) {\n                let listArray = response.data.data;\n                storeReducer({\n                    type: GlobalStoreActionType.LOAD_ALL_YOUR_LIST,\n                    payload: listArray\n                });\n            } else {\n                // console.log(\"API FAILED TO GET YOUR LIST\");\n            }\n        }).catch(error => {\n            // console.error(error)\n        })\n    }\n\n    // load all user list\n    store.loadUserList = async function () {\n        let search = store.search;\n        let sort = store.sort;\n\n        api.getAllTop5ListsPublishedByUsername({\n            search,\n            sort\n        }).then((response) => {\n            // console.log(response)\n\n            if (response.data.success === true) {\n                let listArray = response.data.data;\n\n                storeReducer({\n                    type: GlobalStoreActionType.LOAD_ALL_USER_LIST,\n                    payload: listArray\n                });\n            } else {\n                // console.log(\"API FAILED TO GET USER LIST\");\n            }\n        }).catch(error => {\n            // console.error(error)\n        })\n    }\n\n    store.reloadCurrentLists = function () {\n        // console.log(location)\n        switch (location.pathname) {\n            case '/home':\n                store.loadYourList()\n                break;\n            case '/all':\n                store.loadAllList()\n                break;\n            case '/user':\n                store.loadUserList()\n                break;\n            case '/community':\n                store.loadCommunityList()\n                break;\n            default:\n                break;\n        }\n    }\n\n    store.markListForDeletion = function (top5List) {\n        storeReducer({\n            type: GlobalStoreActionType.MARK_LIST_FOR_DELETION,\n            payload: top5List\n        });\n    }\n\n    store.deleteList = function (id) {\n        api.deleteTop5ListById(id)\n            .then((response) => {\n                if (response.data.success === true) {\n                    store.loadYourList();\n                }\n            })\n    }\n\n    store.deleteMarkedList = function () {\n        const id = store.listMarkedForDeletion._id;\n        store.unmarkListForDeletion();\n        store.deleteList(id);\n    }\n\n    store.unmarkListForDeletion = function () {\n        storeReducer({\n            type: GlobalStoreActionType.UNMARK_LIST_FOR_DELETION,\n            // payload: null\n        });\n    }\n\n    store.saveCurrentList = function (listName, listItems) {\n        const id = store.currentList._id;\n        // const response = await api.updateTop5ListById(store.currentList._id, store.currentList);\n\n        return api.saveTop5ListById(id, {\n            name: listName,\n            items: listItems,\n        }).then((response) => {\n            console.log(response)\n            if (response.data.success === true) {\n                // storeReducer({\n                //     type: GlobalStoreActionType.SET_CURRENT_LIST,\n                //     payload: store.currentList\n                // });\n\n                store.setCurrentListForEdit(null);\n\n                store.loadYourList();\n            }\n        })/*.catch(error => {\n            // console.log(error)\n        }).finally(() => {\n            store.setCurrentListForEdit(null);\n        })*/\n    }\n\n    store.publishTop5List = function (listName, listItems) {\n        const id = store.currentList._id;\n        return api.publishTop5ListById(id, {\n            name: listName,\n            items: listItems,\n        }).then((response) => {\n            console.log(response)\n\n            store.loadYourList()\n\n            if (response.data.success === true) {\n\n                store.setCurrentListForEdit(null);\n\n                // store.loadYourList()\n            }\n        })/*.catch(error => {\n            // console.log(error)\n        }).finally(() => {\n            store.setCurrentListForEdit(null);\n        })*/\n    }\n\n    // type: dislike, like\n    store.likeOrDislike = function (id, type) {\n        // console.log(auth)\n        if (!auth.loggedIn) return;\n\n        return api.likeOrDislikeTop5ListById(id, {\n            type\n        }).then(response => {\n            // console.log(response)\n\n            if (response.data.success === true) {\n                store.reloadCurrentLists()\n            }\n        }).catch(error => {\n\n        });\n    }\n\n    store.increaseViews = function (id) {\n        return api.increaseViewsTop5ListById(id)\n            .then(response => {\n                // console.log(response)\n\n                if (response.data.success === true) {\n                    store.reloadCurrentLists()\n                }\n            })\n            .catch(error => {\n                // console.log(error)\n            })\n    }\n\n    store.commentOnTop5List = function (id, comment) {\n        if (!auth.loggedIn) return;\n\n        return api.commentOnTop5ListById(id, {\n            comment\n        })\n            .then((response) => {\n                // console.log('commentOnTop5ListById: ', response)\n\n                if (response.data.success === true) {\n                    store.reloadCurrentLists()\n                }\n\n                // return response;\n            })\n            .catch((error) => {\n                // console.error(error)\n                // console.log('commentOnTop5ListById: ', error)\n            })\n    }\n\n    return (\n        <GlobalStoreContext.Provider value={{\n            store\n        }}>\n            {props.children}\n        </GlobalStoreContext.Provider>\n    );\n}\n\nexport default GlobalStoreContext;\nexport {GlobalStoreContextProvider};","import {useContext, useState} from 'react';\nimport {Link, useHistory} from 'react-router-dom'\nimport AuthContext from '../auth';\n// import {GlobalStoreContext} from '../store'\n// import EditToolbar from '../components/EditToolbar'\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport MenuItem from '@mui/material/MenuItem';\nimport Menu from '@mui/material/Menu';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\n\nexport default function AppBanner() {\n    const {auth} = useContext(AuthContext);\n    // const {store} = useContext(GlobalStoreContext);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const isMenuOpen = Boolean(anchorEl);\n    const history = useHistory();\n\n    const handleProfileMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleLogout = () => {\n        handleMenuClose();\n        auth.logoutUser();\n    }\n\n    const handleMenuLogin = () => {\n        handleMenuClose();\n\n        history.push('/login');\n    }\n    const handleMenuRegister = () => {\n        handleMenuClose();\n\n        history.push('/register');\n    }\n\n    const menuId = 'primary-search-account-menu';\n    const loggedOutMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            <MenuItem onClick={handleMenuLogin}>Login</MenuItem>\n            <MenuItem onClick={handleMenuRegister}>Create New Account</MenuItem>\n        </Menu>\n    );\n    const loggedInMenu =\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            <MenuItem onClick={handleLogout}>Logout</MenuItem>\n        </Menu>\n\n    // let editToolbar = \"\";\n    let menu = loggedOutMenu;\n    if (auth.loggedIn) {\n        menu = loggedInMenu;\n        // if (store.currentList) {\n        //     editToolbar = <EditToolbar />;\n        // }\n    }\n\n    function getAccountMenu() {\n        return auth.loggedIn ? <Button\n            size=\"large\"\n            edge=\"end\"\n            aria-label=\"account of current user\"\n            aria-controls={menuId}\n            aria-haspopup=\"true\"\n            color=\"inherit\"\n            onClick={handleProfileMenuOpen}\n        >\n            {auth.user.firstName.charAt(0).toUpperCase() + auth.user.lastName.charAt(0).toUpperCase()}\n        </Button> : <IconButton\n            size=\"large\"\n            edge=\"end\"\n            aria-label=\"account of current user\"\n            aria-controls={menuId}\n            aria-haspopup=\"true\"\n            onClick={handleProfileMenuOpen}\n            color=\"inherit\"\n        >\n            <AccountCircle/>\n        </IconButton>\n            ;\n    }\n\n    return (\n        <Box className=\"HeaderNavbar\" sx={{flexGrow: 0}}>\n            <AppBar position=\"static\">\n                <Toolbar sx={{height: '64px'}}>\n                    <Typography\n                        variant=\"h4\"\n                        noWrap\n                        component=\"div\"\n                        sx={{display: {xs: 'block', sm: 'block'}, flexGrow: 1}}\n                    >\n                        <Link style={{textDecoration: 'none', color: 'white'}} to='/'>T<sup>5</sup>L</Link>\n                    </Typography>\n                    {/*<Box sx={{flexGrow: 1}}>*/}\n                    {/*    {editToolbar}*/}\n                    {/*</Box>*/}\n                    <Box sx={{display: {xs: 'flex', md: 'flex'}}}>\n                        {getAccountMenu()}\n                    </Box>\n                </Toolbar>\n            </AppBar>\n            {\n                menu\n            }\n        </Box>\n    );\n}","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Tooltip from '@mui/material/Tooltip';\nimport GlobalStoreContext from \"../store\";\nimport {useContext} from \"react\";\nimport {SortOutlined} from \"@mui/icons-material\";\n\nexport default function SortMenu() {\n    const {store} = useContext(GlobalStoreContext);\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    function handleSort(sortType) {\n        console.log(sortType)\n\n        store.setSortType(sortType)\n    }\n\n    // const sortType = store.sort? store.sort: 'date-desc';\n\n    return (\n        <React.Fragment>\n            <Box sx={{\n                display: 'flex', alignItems: 'center', textAlign: 'center',\n                marginLeft: 'auto',\n            }}>\n                <Typography sx={{}}>\n                    SORT BY\n                </Typography>\n                <Tooltip title=\"Account settings\">\n                    <IconButton onClick={handleClick} size=\"large\" sx={{mx: 2}}>\n                        <SortOutlined/>\n                    </IconButton>\n                </Tooltip>\n            </Box>\n            <Menu\n                anchorEl={anchorEl}\n                open={open}\n                onClose={handleClose}\n                onClick={handleClose}\n                PaperProps={{\n                    elevation: 0,\n                    sx: {\n                        overflow: 'visible',\n                        filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\n                        mt: 1.5,\n                        '& .MuiAvatar-root': {\n                            width: 32,\n                            height: 32,\n                            ml: -0.5,\n                            mr: 1,\n                        },\n                        '&:before': {\n                            content: '\"\"',\n                            display: 'block',\n                            position: 'absolute',\n                            top: 0,\n                            right: 14,\n                            width: 10,\n                            height: 10,\n                            bgcolor: 'background.paper',\n                            transform: 'translateY(-50%) rotate(45deg)',\n                            zIndex: 0,\n                        },\n                    },\n                }}\n                transformOrigin={{horizontal: 'right', vertical: 'top'}}\n                anchorOrigin={{horizontal: 'right', vertical: 'bottom'}}\n            >\n                <MenuItem\n                    selected={store.sort === 'date-desc'}\n                    onClick={(event) => {\n                        handleSort('date-desc')\n                    }}\n                >\n                    Publish Date (Newest)\n                </MenuItem>\n                <MenuItem\n                    selected={store.sort === 'date-asc'}\n                    onClick={(event) => {\n                        handleSort('date-asc')\n                    }}\n                >\n                    Publish Date (Oldest)\n                </MenuItem>\n                <MenuItem\n                    selected={store.sort === 'views-desc'}\n                    onClick={(event) => {\n                        handleSort('views-desc')\n                    }}\n                >\n                    Views\n                </MenuItem>\n                <MenuItem\n                    selected={store.sort === 'likes-desc'}\n                    onClick={(event) => {\n                        handleSort('likes-desc')\n                    }}\n                >\n                    Likes\n                </MenuItem>\n                <MenuItem\n                    selected={store.sort === 'dislikes-desc'}\n                    onClick={(event) => {\n                        handleSort('dislikes-desc')\n                    }}\n                >\n                    Dislikes\n                </MenuItem>\n            </Menu>\n        </React.Fragment>\n    );\n}\n","import * as React from \"react\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\n\nimport HomeIcon from \"@mui/icons-material/HomeOutlined\";\nimport GroupsIcon from \"@mui/icons-material/GroupsOutlined\";\nimport PersonIcon from \"@mui/icons-material/PersonOutlined\";\nimport FunctionsOutlinedIcon from '@mui/icons-material/FunctionsOutlined';\n\nimport {useContext, useEffect, useState} from 'react'\nimport AuthContext from '../auth'\n\nimport {\n    Link,\n    matchPath, useHistory,\n    useLocation, useParams,\n} from \"react-router-dom\";\nimport {TextField} from \"@mui/material\";\nimport GlobalStoreContext from \"../store\";\nimport SortMenu from \"./SortMenu\";\n\n// function LinkTab(props) {\n//     return (\n//         <Tab\n//             component=\"a\"\n//             onClick={(event) => {\n//                 event.preventDefault();\n//             }}\n//             {...props}\n//         />\n//     );\n// }\n//\n// export default function Navigation() {\n//     const [value, setValue] = React.useState(0);\n//\n//     const handleChange = (event, newValue) => {\n//         setValue(newValue);\n//     };\n//\n//     return (\n//         <Box sx={{ width: '100%' }}>\n//             <Tabs value={value} onChange={handleChange} aria-label=\"nav tabs example\">\n//                 <LinkTab label=\"Page One\" href=\"/\" />\n//                 <LinkTab label=\"Page Two\" href=\"/login\" />\n//                 <LinkTab label=\"Page Three\" href=\"/register\" />\n//             </Tabs>\n//         </Box>\n//     );\n// }\n\nfunction useRouteMatch(patterns) {\n    const {pathname} = useLocation();\n    // console.log(pathname)\n\n    for (let i = 0; i < patterns.length; i += 1) {\n        const pattern = patterns[i];\n        // const possibleMatch = matchPath(pattern, pathname);\n        const possibleMatch = matchPath(pathname, {\n            path: pattern,\n            exact: true,\n            strict: false\n        });\n        // console.log(possibleMatch)\n        if (possibleMatch !== null) {\n            // console.log(possibleMatch)\n            return possibleMatch;\n        }\n    }\n\n    return null;\n}\n\nexport default function Navigation(props) {\n    // console.log('props:', props)\n\n    // You need to provide the routes in descendant order.\n    // This means that if you have nested routes like:\n    // users, users/new, users/edit.\n    // Then the order should be ['users/add', 'users/edit', 'users'].\n    // const routeMatch = useRouteMatch([\"/home\", \"/all\", \"/user\", \"/community\"]);\n    const routeMatch = useRouteMatch([\"/user\", \"/home\", \"/all\", \"/community\"]);\n    // console.log(routeMatch)\n    // {path: '/community', url: '/community', isExact: true, params: {…}}\n    // const currentTab = routeMatch?.pattern?.path;\n    const currentTab = routeMatch?.path;\n    // console.log(currentTab)\n\n    const {auth} = useContext(AuthContext);\n\n    const {store} = useContext(GlobalStoreContext);\n\n    const [keyword, setKeyword] = useState('')\n\n    // const history = useHistory()\n    const location = useLocation()\n    // const params = useParams()\n    const handleSearch = (event) => {\n        if (event.code === 'Enter') {\n            const search = event.target.value;\n\n            store.setSearchKeyword(search);\n\n            // console.log(location)\n            // console.log(params)\n            // history.push({\n            //     pathname:\n            // })\n        }\n    }\n\n\n    useEffect(() => {\n        console.log('location changed', location)\n\n        store.clearSearchAndSort()\n    }, [location]);\n\n    useEffect(() => {\n        setKeyword(store.search)\n    }, [store.search])\n\n\n    function handleSearchChange(event) {\n        setKeyword(event.target.value)\n    }\n\n    return (\n        <div className=\"navigation-wrapper\">\n            <Tabs sx={{display: 'inline-block'}} value={currentTab} aria-label=\"icon tabs example\">\n                <Tab\n                    icon={<HomeIcon fontSize=\"large\"/>}\n                    aria-label=\"Your Lists\"\n                    value=\"/home\"\n                    to=\"/home\"\n                    component={Link}\n                    disabled={!auth.loggedIn}\n                />\n                <Tab\n                    icon={<GroupsIcon fontSize=\"large\"/>}\n                    aria-label=\"All Lists\"\n                    value=\"/all\"\n                    to=\"/all\"\n                    component={Link}\n                />\n                <Tab\n                    icon={<PersonIcon fontSize=\"large\"/>}\n                    aria-label=\"User Lists\"\n                    value=\"/user\"\n                    to=\"/user\"\n                    component={Link}\n                />\n                <Tab\n                    icon={<FunctionsOutlinedIcon fontSize=\"large\"/>}\n                    aria-label=\"Community Lists\"\n                    value=\"/community\"\n                    to=\"/community\"\n                    component={Link}\n                />\n            </Tabs>\n\n            {/*  search input */}\n            <TextField\n                // value={store.search}\n                value={keyword}\n                onChange={handleSearchChange}\n                onKeyPress={(event) => {\n                handleSearch(event)\n            }} sx={{\n                // display: 'inline-block',\n                marginLeft: '10px',\n                marginTop: '8px'\n            }} size=\"small\" margin=\"normal\"/>\n\n            {/*  sort menu*/}\n            <SortMenu />\n        </div>\n    );\n}\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Navigation from \"../component/Navigation\";\n// import Statusbar from \"../components/Statusbar\";\n\nconst HomeLayout = ({ children }) => (\n    <div className=\"home-overall-wrapper\">\n        <Navigation />\n        <div className=\"inner-content-wrapper\">\n        {children}\n        </div>\n        {/*<Statusbar />*/}\n    </div>\n);\n\nconst HomeLayoutRoute = ({component: Component, ...rest}) => {\n    return (\n        <Route {...rest} render={props => (\n            <HomeLayout>\n                <Component {...props} />\n            </HomeLayout>\n        )} />\n    )\n};\n\nexport default HomeLayoutRoute;","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport {Box, TextField, Typography} from \"@mui/material\";\nimport Stack from \"@mui/material/Stack\";\nimport {useContext, useEffect, useState} from \"react\";\nimport {GlobalStoreContext} from '../store'\n\nexport default function EditListDialog(props) {\n\n    const {store} = useContext(GlobalStoreContext);\n\n    const open = store.currentList !== null;\n\n    const handleSave = async () => {\n        // console.log('save:', title, items)\n\n        store.saveCurrentList(title, items)\n    };\n\n    const handlePublish = () => {\n        store.publishTop5List(title, items)\n    };\n\n    const handleClose = () => {\n        store.setCurrentListForEdit(null);\n    }\n\n    useEffect(() => {\n        if (store.currentList) {\n            setTitle(store.currentList.name)\n            setItems(store.currentList.items)\n        }\n    }, [store.currentList]);\n\n    const [title, setTitle] = useState('');\n    const [items, setItems] = useState(\n        ['', '', '', '', '']\n    );\n\n    function handleUpdateTitle(event) {\n        setTitle(event.target.value);\n        // console.log(title)\n    }\n\n    function handleUpdateItem(event, i) {\n        let its = items.slice();\n        its[i] = event.target.value\n        setItems(its);\n        // console.log(items)\n    }\n\n    // list title and items\n    const titleNotEmpty = !!title;\n    const itemsSomeNotEmpty = items && items.some(item => !!item);\n    const enableSave = titleNotEmpty && itemsSomeNotEmpty;\n    // const enableSave = true;\n    const itemsEveryNotEmpty = items && items.every(item => !!item);\n    const enablePublish = titleNotEmpty && itemsEveryNotEmpty;\n\n    return (\n        <>\n            <Dialog\n                maxWidth='sm'\n                fullWidth={true}\n                open={open}\n                onClose={handleClose}\n            >\n                <DialogTitle>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        label=\"List title\"\n                        fullWidth\n                        variant=\"standard\"\n                        onChange={handleUpdateTitle}\n                        value={title}\n                        autoFocus\n                    />\n                </DialogTitle>\n                <DialogContent>\n                    <Stack\n                        direction=\"column\"\n                        alignItems=\"stretch\"\n                        spacing={0.5}\n                    >\n                        {\n                            items.map((item, i) => {\n                                return <Box\n                                    key={i + 1}\n                                    sx={{\n                                        display: 'flex',\n                                        flexDirection: 'row',\n                                        justifyContent: 'center',\n                                        alignItems: 'center',\n                                    }}>\n                                    <Typography sx={{\n                                        padding: '10px',\n                                        marginRight: '10px',\n                                        backgroundColor: '#e2ace2'\n                                    }}>\n                                        {i + 1}.\n                                    </Typography>\n                                    <TextField\n                                        margin=\"dense\"\n                                        label=\"item\"\n                                        fullWidth\n                                        variant=\"standard\"\n                                        onChange={(event) => {\n                                            handleUpdateItem(event, i)\n                                        }}\n                                        value={item}\n                                    />\n                                </Box>\n                            })\n                        }\n                    </Stack>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={handleSave}\n                        disabled={!enableSave}\n                    >\n                        Save\n                    </Button>\n                    <Button\n                        onClick={handlePublish}\n                        disabled={!enablePublish}\n                    >\n                        Publish\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}\n","import CardContent from \"@mui/material/CardContent\";\nimport Grid from \"@mui/material/Grid\";\nimport Stack from \"@mui/material/Stack\";\nimport {Link, TextField} from \"@mui/material\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport Collapse from \"@mui/material/Collapse\";\nimport * as React from \"react\";\nimport {useContext, useState} from \"react\";\nimport {styled} from \"@mui/material/styles\";\nimport Paper from \"@mui/material/Paper\";\nimport {yellow} from \"@mui/material/colors\";\nimport {GlobalStoreContext} from '../store'\n\nconst ListItemStyled = styled(Paper)(({theme}) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    boxShadow: 'none',\n    borderRadius: 0,\n    backgroundColor: 'transparent',\n    color: '#feff8c',\n    fontSize: '1.2rem',\n}));\n\nconst CommentItemStyled = styled(Paper)(({theme}) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    backgroundColor: yellow.A100,\n    color: theme.palette.text.secondary,\n}));\n\nexport default function CollapseCardExpand(props) {\n\n    const {store} = useContext(GlobalStoreContext);\n\n    const {expanded, list, disableActions} = props;\n\n    const items = list.items;\n\n    const [commentText, setCommentText] = useState('')\n\n    function handleCommentInputUpdate(event) {\n        setCommentText(event.target.value)\n    }\n\n    function handleCommentInputOnKeyPress(event) {\n        if (event.code === \"Enter\"\n            && commentText\n        ) {\n            // console.log(commentText)\n            setCommentText(\"\")\n\n            store.commentOnTop5List(list._id, commentText)\n                .then((data) => {\n                    // console.log(data)\n                    // console.log('commentOnTop5List', data)\n                })\n                .catch((error) => {\n                    // console.error(error)\n                })\n        }\n    }\n\n    const height = () => {\n        return list.community ? '400px': '300px';\n    }\n\n    return (\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n            <CardContent>\n                <Grid container spacing={2} sx={{\n                    // height: '300px',\n                    height: height(),\n                    // minHeight: '300px',\n                    // height: 'fit-content',\n                    // maxHeight: '400px',\n                    overflow: 'hidden'\n                }}>\n                    <Grid item xs={5} sx={{\n                        height: '100%'\n                    }}>\n                        <Stack\n                            direction=\"column\"\n                            justifyContent=\"space-evenly\"\n                            alignItems=\"stretch\"\n                            // spacing={0.5}\n                            sx={{\n                                height: '100%',\n                                backgroundColor: '#6c59c2c9',\n                            }}\n                        >\n                            {\n                                items.map((item, index) =>\n                                    <ListItemStyled key={index}>\n                                        {index + 1}. {item}\n\n                                        {\n                                            list.community === true ?\n                                                <Typography variant='span' sx={{display: 'block'}}>\n                                                    ({list.votes[index]} votes)\n                                                </Typography> : ''\n                                        }\n                                    </ListItemStyled>\n                                )\n                            }\n                        </Stack>\n                    </Grid>\n                    {\n                        list.published ?\n                            <Grid item xs={7} sx={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                                overflow: 'hidden',\n                                height: '100%'\n                            }}>\n                                <Stack\n                                    direction=\"column\"\n                                    justifyContent=\"flex-start\"\n                                    alignItems=\"stretch\"\n                                    spacing={1}\n                                    sx={{\n                                        flex: 1,\n                                        overflowY: 'auto',\n                                    }}\n                                >\n                                    {\n                                        list.comments?list.comments.map(comment => <CommentItemStyled key={comment._id}>\n                                                {/*<Link component={RouterLink} to={\"/user/\"+comment.user.username} underline=\"always\">*/}\n                                                {/*    {comment.user.username}*/}\n                                                {/*</Link>*/}\n                                                <Link underline=\"always\">\n                                                    {comment.user.username}\n                                                </Link>\n                                                <Typography paragraph>\n                                                    {comment.text}\n                                                </Typography>\n                                            </CommentItemStyled>\n                                        ): ''\n                                    }\n                                </Stack>\n                                <Box sx={{\n                                    height: '50px'\n                                }}>\n                                    <TextField\n                                        disabled={disableActions}\n                                        sx={{display: 'inline-block', marginTop: '8px',}} size=\"small\"\n                                        fullWidth={true}\n                                        onChange={handleCommentInputUpdate}\n                                        onKeyPress={handleCommentInputOnKeyPress}\n                                        value={commentText}\n                                        margin=\"normal\"/>\n                                </Box>\n                            </Grid>\n                            : ''\n                    }\n                </Grid>\n            </CardContent>\n        </Collapse>\n    )\n}","import * as React from 'react';\nimport {styled} from '@mui/material/styles';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardActions from '@mui/material/CardActions';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport {ThumbDown, ThumbUp} from \"@mui/icons-material\";\nimport Stack from '@mui/material/Stack';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Button from \"@mui/material/Button\";\nimport {Link, TextField} from \"@mui/material\";\nimport {useContext, useState} from \"react\";\nimport {GlobalStoreContext} from '../store'\nimport {Link as RouterLink, useLocation} from 'react-router-dom';\nimport AuthContext from \"../auth\";\nimport CollapseCardExpand from \"./CollapseCardExpand\";\n\nconst ExpandMore = styled((props) => {\n    const {expand, ...other} = props;\n    return <IconButton {...other} />;\n})(({theme, expand}) => ({\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n    transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n    }),\n}));\n\nexport default function CollapseCard(props) {\n    const showDelete = props.showDelete ? props.showDelete : false;\n\n    const {list} = props;\n\n    const {store} = useContext(GlobalStoreContext);\n\n    const {auth} = useContext(AuthContext);\n\n    const disableActions = !auth.loggedIn;\n\n    const [expanded, setExpanded] = useState(false);\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n\n        if (!expanded) {\n            // console.log('count view + 1')\n            store.increaseViews(list._id)\n        }\n    };\n\n    const handleEditList = (top5List) => {\n        store.setCurrentListForEdit(top5List)\n    }\n\n    const handleDeleteList = (top5List) => {\n        store.markListForDeletion(top5List);\n    }\n\n    const dateString = (timestamp) => {\n        const date = new Date(timestamp)\n        return date.toLocaleDateString() + \" \" + date.toLocaleTimeString()\n    }\n\n    const handleListLike = (id) => {\n        store.likeOrDislike(id, 'like')\n    }\n    const handleListDislike = (id) => {\n        store.likeOrDislike(id, 'dislike')\n    }\n\n    return (\n        <Card sx={{\n            marginTop: '20px',\n            marginBottom: '20px',\n            backgroundColor: '#f1eefead',\n            borderRadius: '5px',\n        }}>\n            <CardHeader\n                action={\n                    <Stack direction=\"row\" spacing={1}>\n                        <Button\n                            disabled={disableActions}\n                            onClick={(event) => {\n                                handleListLike(list._id)\n                            }} color=\"secondary\" startIcon={<ThumbUp/>}>\n                            {list.likes}\n                        </Button>\n                        <Button\n                            disabled={disableActions}\n                            onClick={(event) => {\n                                handleListDislike(list._id)\n                            }} color=\"primary\" startIcon={<ThumbDown/>}>\n                            {list.dislikes}\n                        </Button>\n                        {\n                            showDelete ?\n                                <IconButton onClick={(event) => {\n                                    // handleDeleteList(list._id)\n                                    handleDeleteList(list)\n                                }} aria-label=\"delete\">\n                                    <DeleteIcon/>\n                                </IconButton> : ''\n                        }\n                    </Stack>\n                }\n                title={list.name}\n                subheader={\n                    list.community === true ? '' : <Typography variant=\"body2\">\n                        By:\n                        {/*<Link component={RouterLink} to={\"/user/\"+list.user.username} underline=\"always\">*/}\n                        {/*    {list.user.username}*/}\n                        {/*</Link>*/}\n                        <Link underline=\"always\">\n                            {list.user.username}\n                        </Link>\n                    </Typography>\n                }\n                sx={{\n                    paddingBottom: 0,\n                }}\n            />\n\n            <CollapseCardExpand\n                expanded={expanded}\n                list={list}\n                disableActions={disableActions}\n            />\n\n            <CardActions disableSpacing>\n                {\n                    list.published === false ? <Button onClick={(event) => {\n                        handleEditList(list)\n                    }} color='error' sx={{\n                        textTransform: 'none'\n                    }}>\n                        Edit\n                    </Button> : ''\n                }\n                {\n                    list.published === true ? <Typography variant=\"body2\" color=\"primary\">\n                        {\n                            list.community === true ? 'Updated:' : 'Published:'\n                        }\n                        <span style={{\n                            color: 'green'\n                        }}>\n                        {dateString(list.publishedAt)}\n                    </span>\n                    </Typography> : ''\n                }\n                <Typography sx={{\n                    marginLeft: 'auto',\n                    marginRight: '50px'\n                }} variant=\"body2\" color=\"primary\">\n                    Views:\n                    <span style={{\n                        color: 'red'\n                    }}>\n                    {list.views}\n                </span>\n                </Typography>\n                <ExpandMore\n                    expand={expanded}\n                    onClick={handleExpandClick}\n                    aria-expanded={expanded}\n                    aria-label=\"show more\"\n                >\n                    <ExpandMoreIcon/>\n                </ExpandMore>\n            </CardActions>\n        </Card>\n    );\n}","import Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport Button from \"@mui/material/Button\";\nimport React, {useContext, useEffect, useState} from \"react\";\nimport {GlobalStoreContext} from '../store'\n\nexport default function DeleteListDialog(props) {\n\n    const {store} = useContext(GlobalStoreContext);\n\n    const open = store.listMarkedForDeletion !== null;\n\n    const [name, setName] = useState('')\n    useEffect(() => {\n        if (store.listMarkedForDeletion) {\n            setName(store.listMarkedForDeletion.name)\n        }\n    }, [store.listMarkedForDeletion]);\n\n    const handleClose = () => {\n        store.unmarkListForDeletion();\n    }\n\n    const handleConfirm = () => {\n        store.deleteMarkedList();\n    }\n\n    return <Dialog\n        open={open}\n        onClose={handleClose}\n    >\n        <DialogTitle>\n            Delete the {name} Top 5 List?\n        </DialogTitle>\n        <DialogActions>\n            <Button onClick={handleClose}>Cancel</Button>\n            <Button onClick={handleConfirm} autoFocus>\n                Confirm\n            </Button>\n        </DialogActions>\n    </Dialog>\n}","import React, {useContext, useEffect, useState} from \"react\";\nimport {GlobalStoreContext} from '../store'\nimport {Fab, Typography} from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport EditListDialog from '../component/EditListDialog';\nimport CollapseCard from \"../component/CollapseCard\";\nimport DeleteListDialog from \"../component/DeleteListDialog\";\n\nexport default function HomePage() {\n\n    const {store} = useContext(GlobalStoreContext);\n\n    useEffect(() => {\n        store.loadYourList()\n\n    }, [store.search, store.sort]);\n\n    const lists = store.yourList ? store.yourList : [];\n    // console.log(lists)\n\n    const search = store.search;\n    // console.log('search yours: ', search)\n\n    const handleClickOpen = async () => {\n        store.createNewList()\n        // .then((data) => {\n        //     console.log(data)\n        // })\n    };\n\n    return <>\n        <div className=\"content-scroll\">\n            {\n                lists?.map((pair) => (\n                    <CollapseCard\n                        key={pair._id}\n                        list={pair}\n                        showDelete={true}\n                    />\n                ))\n            }\n        </div>\n\n        <div className=\"bottom-status\">\n            <Fab\n                color=\"primary\"\n                aria-label=\"add\"\n                className=\"add-list-button\"\n                size={\"large\"}\n                onClick={handleClickOpen}\n            >\n                <AddIcon/>\n            </Fab>\n\n            <Typography variant=\"h3\" sx={{}}>\n                {\n                    search ? 'Your ' + search + ' Lists' : 'Your Lists'\n                }\n            </Typography>\n\n            <EditListDialog/>\n            <DeleteListDialog/>\n        </div>\n    </>\n}","import React, {useContext, useEffect} from \"react\";\nimport CollapseCard from \"../component/CollapseCard\";\nimport {Typography} from \"@mui/material\";\nimport {GlobalStoreContext} from '../store'\n\nexport default function CommunityPage(props) {\n    const {store} = useContext(GlobalStoreContext);\n\n    useEffect(() => {\n        store.loadCommunityList()\n\n    }, [store.search, store.sort]);\n\n    const lists = store.communityList?store.communityList:[];\n    // console.log(lists)\n    //\n    const search = store.search;\n    // console.log('search community: ', search)\n\n    return <>\n\n        <div className=\"content-scroll\">\n            {\n                lists?.map((list) => (\n                    <CollapseCard\n                        key={list._id}\n                        list={list}\n                    />\n                ))\n            }\n\n        </div>\n\n        <div className=\"bottom-status\">\n\n            <Typography variant=\"h3\" sx={{}}>\n                {\n                    search ? search + ' Lists' : 'Community Lists'\n                }\n            </Typography>\n\n        </div>\n    </>\n}","import React, {useContext, useEffect} from \"react\";\nimport CollapseCard from \"../component/CollapseCard\";\nimport {Typography} from \"@mui/material\";\nimport {GlobalStoreContext} from '../store'\n\nexport default function UserPage(props) {\n\n    const {store} = useContext(GlobalStoreContext);\n\n    useEffect(() => {\n        store.loadUserList()\n\n    }, [store.search, store.sort]);\n\n    const lists = store.userList?store.userList:[];\n    console.log(lists)\n    //\n    const search = store.search;\n    // console.log('search user: ', search)\n\n    return <>\n\n        <div className=\"content-scroll\">\n            {\n                lists?.map((list) => (\n                    <CollapseCard\n                        key={list._id}\n                        list={list}\n                    />\n                ))\n            }\n\n        </div>\n\n        <div className=\"bottom-status\">\n\n            <Typography variant=\"h3\" sx={{}}>\n                {\n                    search ? search + ' Lists' : 'User Lists'\n                }\n            </Typography>\n\n        </div>\n    </>\n}","import React, {useContext, useEffect, useState} from \"react\";\nimport CollapseCard from \"../component/CollapseCard\";\nimport {Typography} from \"@mui/material\";\nimport {GlobalStoreContext} from '../store'\n\nexport default function AllPage(props) {\n\n    const {store} = useContext(GlobalStoreContext);\n\n    useEffect(() => {\n        store.loadAllList()\n    }, [store.search, store.sort]);\n\n    const lists = store.allList?store.allList:[];\n    // console.log(lists)\n\n    const search = store.search;\n\n    return <>\n\n        <div className=\"content-scroll\">\n            {\n                lists?.map((list) => (\n                    <CollapseCard\n                        key={list._id}\n                        list={list}\n                    />\n                ))\n            }\n\n        </div>\n\n        <div className=\"bottom-status\">\n\n            <Typography variant=\"h3\" sx={{}}>\n                {\n                    search ? search + ' Lists' : 'All Lists'\n                }\n            </Typography>\n\n        </div>\n    </>\n}","import Link from '@mui/material/Link';\nimport Typography from '@mui/material/Typography';\nimport {Link as RouteLink} from 'react-router-dom';\n\nexport default function Copyright(props) {\n    return (\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n            {'Copyright © '}\n            <Link color=\"inherit\" component={RouteLink} to=\"/\">\n                The Top 5 Lister\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n\n            <br/>\n            Created by Yang Yu\n        </Typography>\n    );\n}","import {createTheme} from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport * as React from \"react\";\nimport {ThemeProvider} from \"@emotion/react\";\nimport Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport {useHistory} from \"react-router-dom\";\nimport Copyright from '../component/Copyright'\n\nexport default function SplashScreen() {\n    const theme = createTheme({\n        palette: {\n            neutral: {\n                main: \"#64748B\",\n                contrastText: \"#fff\",\n            },\n        },\n    });\n\n    const history = useHistory();\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Grid container component=\"main\" flexDirection=\"column\"\n                  sx={{background: 'linear-gradient(to left, #b993d6, #8ca6db)'}}>\n                <CssBaseline/>\n                <Grid container sx={{flexGrow: 1}}>\n\n                    <Grid item xs={12} md={8}>\n                        {/*<Item>xs=8</Item>*/}\n                        <Grid\n                            container\n                            direction=\"column\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            height=\"100%\"\n                        >\n                            <Typography\n                                component=\"h1\"\n                                variant=\"h3\"\n                                padding={{xs: 2, md: 3}}\n                                color=\"white\"\n                            >\n                                Welcome to The Top 5 Lister\n                            </Typography>\n                            <Typography\n                                component=\"h3\"\n                                variant=\"h5\"\n                                padding={{xs: 2, md: 3}}\n                                sx={{fontStyle: \"italic\", maxWidth: 650, width: '100%',}}\n                                color=\"white\"\n                            >\n                                An application where users can list their five favorite anything\n                                as well as see lists made by other users and even see the\n                                aggregate top 5 lists of all users for a given category.\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                        {/*<Item>xs=4</Item>*/}\n                        <Grid\n                            container\n                            direction=\"column\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            height=\"100%\"\n                        >\n                            {/* <span style={{ cursor: \"not-allowed\" }}>\n              <Button component={Link} disabled>\n                disabled\n              </Button>\n            </span> */}\n                            {/*<Button component={Link} href={'/login'}>Home</Button>*/}\n\n                            <Button\n                                variant=\"contained\"\n                                sx={{width: \"75%\", maxWidth: 300, mb: 2, textTransform: 'none'}}\n                                onClick={() => {\n                                    history.push('/register')\n                                }}\n                            >\n                                Create Account\n                            </Button>\n                            <Button\n                                variant=\"contained\"\n                                color=\"success\"\n                                sx={{width: \"75%\", maxWidth: 300, mb: 2, textTransform: 'none'}}\n                                onClick={() => {\n                                    history.push('/login')\n                                }}\n                            >\n                                Login\n                            </Button>\n                            <Button\n                                color=\"neutral\"\n                                variant=\"contained\"\n                                sx={{width: \"75%\", maxWidth: 300, textTransform: 'none'}}\n                                onClick={() => {\n                                    history.push('/all')\n                                }}\n                            >\n                                Continue as Guest\n                            </Button>\n                        </Grid>\n                    </Grid>\n\n                </Grid>\n                <Grid container>\n                    <Grid item xs={12}>\n\n                        <Copyright\n                            component=\"p\"\n                            variant=\"body\"\n                            color=\"white\"\n                            padding=\"10px\"\n                        />\n                    </Grid>\n                </Grid>\n            </Grid>\n        </ThemeProvider>\n    );\n}\n","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport {Link as RouterLink} from 'react-router-dom';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport {createTheme, ThemeProvider} from '@mui/material/styles';\nimport {useContext} from \"react\";\nimport AuthContext from \"../auth\";\nimport {GlobalStoreContext} from \"../store\";\nimport Copyright from '../component/Copyright'\n\nconst theme = createTheme();\n\nexport default function LoginScreen() {\n\n    const {auth} = useContext(AuthContext);\n    const {store} = useContext(GlobalStoreContext)\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        const data = new FormData(event.currentTarget);\n\n        auth.loginUser({\n            email: data.get('email'),\n            password: data.get('password'),\n        }, store);\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Grid container component=\"main\">\n                <CssBaseline/>\n                <Grid\n                    item\n                    xs={false}\n                    sm={4}\n                    md={7}\n                    sx={{\n                        backgroundImage: 'url(https://source.unsplash.com/random)',\n                        backgroundRepeat: 'no-repeat',\n                        backgroundColor: (t) =>\n                            t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\n                        backgroundSize: 'cover',\n                        backgroundPosition: 'center',\n                    }}\n                />\n                <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                    <Box\n                        sx={{\n                            my: 8,\n                            mx: 4,\n                            display: 'flex',\n                            flexDirection: 'column',\n                            alignItems: 'center',\n                        }}\n                    >\n                        <Avatar sx={{m: 1, bgcolor: 'secondary.main'}}>\n                            <LockOutlinedIcon/>\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            Sign in\n                        </Typography>\n                        <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{mt: 1}}>\n                            <TextField\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address or Username\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                autoFocus\n                            />\n                            <TextField\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                            />\n                            {/*<FormControlLabel*/}\n                            {/*    control={<Checkbox value=\"remember\" color=\"primary\"/>}*/}\n                            {/*    label=\"Remember me\"*/}\n                            {/*/>*/}\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                sx={{mt: 3, mb: 2}}\n                            >\n                                Sign In\n                            </Button>\n                            <Grid container>\n                                <Grid item xs>\n                                    {/*<Link href=\"#\" variant=\"body2\">*/}\n                                    {/*    Forgot password?*/}\n                                    {/*</Link>*/}\n                                </Grid>\n                                <Grid item>\n                                    <Link component={RouterLink} to=\"/register/\" variant=\"body2\">\n                                        {\"Don't have an account? Sign Up\"}\n                                    </Link>\n                                </Grid>\n                            </Grid>\n                            <Copyright sx={{mt: 5}}/>\n                        </Box>\n                    </Box>\n                </Grid>\n            </Grid>\n        </ThemeProvider>\n    );\n}\n","import * as React from 'react';\nimport {useContext} from 'react';\nimport AuthContext from '../auth'\nimport Copyright from '../component/Copyright'\nimport Avatar from '@mui/material/Avatar';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Grid from '@mui/material/Grid';\nimport Link from '@mui/material/Link';\nimport {Link as RouterLink} from 'react-router-dom';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport {GlobalStoreContext} from '../store'\n\nexport default function RegisterScreen() {\n    const {auth} = useContext(AuthContext);\n    const {store} = useContext(GlobalStoreContext)\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        const formData = new FormData(event.currentTarget);\n\n        auth.registerUser({\n            username: formData.get('username'),\n            firstName: formData.get('firstName'),\n            lastName: formData.get('lastName'),\n            email: formData.get('email'),\n            password: formData.get('password'),\n            passwordVerify: formData.get('passwordVerify')\n        }, store);\n    };\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline/>\n            <Box\n                sx={{\n                    marginTop: 8,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                }}\n            >\n                <Avatar sx={{m: 1, bgcolor: 'secondary.main'}}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign up\n                </Typography>\n                <Box component=\"form\"\n                     // noValidate\n                     onSubmit={handleSubmit} sx={{mt: 3}}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                autoComplete=\"username\"\n                                name=\"username\"\n                                required\n                                fullWidth\n                                id=\"username\"\n                                label=\"Username\"\n                                autoFocus\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                autoComplete=\"fname\"\n                                name=\"firstName\"\n                                required\n                                fullWidth\n                                id=\"firstName\"\n                                label=\"First Name\"\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                required\n                                fullWidth\n                                id=\"lastName\"\n                                label=\"Last Name\"\n                                name=\"lastName\"\n                                autoComplete=\"lname\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                type=\"email\"\n                                autoComplete=\"email\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"new-password\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                required\n                                fullWidth\n                                name=\"passwordVerify\"\n                                label=\"Password Verify\"\n                                type=\"password\"\n                                id=\"passwordVerify\"\n                                autoComplete=\"new-password\"\n                            />\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{mt: 3, mb: 2}}\n                    >\n                        Sign Up\n                    </Button>\n                    <Grid container justifyContent=\"flex-end\">\n                        <Grid item>\n                            <Link component={RouterLink} to=\"/login\" variant=\"body2\">\n                                Already have an account? Sign in\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Box>\n            </Box>\n\n            <Copyright sx={{mt: 5}}/>\n        </Container>\n    );\n}","import useNotification from './hook'\nimport * as React from \"react\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport Alert from \"@mui/material/Alert\";\nimport AlertTitle from \"@mui/material/AlertTitle\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport Button from \"@mui/material/Button\";\nimport {useEffect, useState} from \"react\";\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles({\n    notificationAlert: {\n        \"& .MuiAlert-icon\": {\n            fontSize: 40\n        }\n    }\n});\n\nexport default function Notification() {\n    const classes = useStyles();\n\n    const {error, removeError} = useNotification()\n\n    const handleClose = () => {\n        removeError()\n    };\n\n    // const open = !!error\n    const open = !!error.message\n\n    const message = error && error.message ? error.message : ''\n\n    // success or error\n    const status = error && error.status ? error.status : ''\n\n    // console.log('error', error)\n    const [msg, setMsg] = useState('');\n    const [type, setType] = useState('error')\n    useEffect(() => {\n        if (message) {\n            setMsg(message)\n            setType(status)\n        }\n    }, [message])\n\n\n    const capitalize = (s) => {\n        if (typeof s !== 'string') return ''\n        return s.charAt(0).toUpperCase() + s.slice(1)\n    }\n\n    return (\n        <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            maxWidth='sm'\n            fullWidth={true}\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                {/*Error*/}\n                {capitalize(type)}\n            </DialogTitle>\n            <DialogContent>\n                {/*<DialogContentText id=\"alert-dialog-description\">*/}\n\n                {/*<Alert severity=\"error\">*/}\n                {/*<Alert severity=\"success\">*/}\n                {/*<Alert severity=\"warning\">*/}\n                <Alert\n                    className={classes.notificationAlert}\n                    severity={type}\n                    sx={{fontSize: '1.5rem'}}\n                >\n                    {/*<AlertTitle>Error</AlertTitle>*/}\n\n                    {/*{message}*/}\n                    {msg}\n                </Alert>\n                \n                {/*</DialogContentText>*/}\n            </DialogContent>\n            <DialogActions>\n                {/*<Button onClick={handleClose}>Disagree</Button>*/}\n                <Button\n                    onClick={handleClose}\n                    // autoFocus\n                >\n                    Ok\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}","import './App.css';\nimport './override.css';\n\nimport * as React from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport {AuthContextProvider} from './auth';\nimport {GlobalStoreContextProvider} from './store'\nimport AppBanner from './component/AppBanner'\nimport HomeLayoutRoute from \"./layouts/HomeLayoutRoute\";\nimport HomePage from \"./pages/HomePage\";\nimport CommunityPage from \"./pages/CommunityPage\";\nimport UserPage from \"./pages/UserPage\";\nimport AllPage from \"./pages/AllPage\";\nimport SplashScreen from \"./pages/SplashScreen\";\nimport LoginScreen from \"./pages/LoginScreen\";\nimport RegisterScreen from \"./pages/RegisterScreen\";\nimport Notification from \"./notification\";\nimport {NotificationProvider} from \"./notification/provider\";\n/*\n    This is our application's top-level component.\n    \n    @author McKilla Gorilla\n*/\n/*\n  This is the entry-point for our application. Notice that we\n  inject our store into all the components in our application.\n  \n  @author McKilla Gorilla\n*/\nconst App = () => {\n    return (\n        <BrowserRouter>\n            <NotificationProvider>\n                <AuthContextProvider>\n                    <GlobalStoreContextProvider>\n                        <AppBanner/>\n                        <Switch>\n                            <Route path=\"/\" exact component={SplashScreen}/>\n                            <Route path=\"/login\" exact component={LoginScreen}/>\n                            <Route path=\"/register/\" exact component={RegisterScreen}/>\n                            <HomeLayoutRoute path=\"/home\" exact component={HomePage}/>\n                            <HomeLayoutRoute path=\"/all\" exact component={AllPage}/>\n                            <HomeLayoutRoute path=\"/user\" exact component={UserPage}/>\n                            <HomeLayoutRoute path=\"/community\" exact component={CommunityPage}/>\n                        </Switch>\n                        <Notification/>\n                    </GlobalStoreContextProvider>\n                </AuthContextProvider>\n            </NotificationProvider>\n        </BrowserRouter>\n    )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n//import { AuthContextProvider } from './auth';\nimport reportWebVitals from './reportWebVitals';\n/*\n  This is the entry-point for our application. Notice that we\n  inject our store into all the components in our application.\n  \n  @author McKilla Gorilla\n*/\n/*import { GlobalStoreContext, useGlobalStore } from './store'\nconst AppWrapper = () => {\n  const store = useGlobalStore();\n  return (\n    <GlobalStoreContext.Provider value={store}>\n      <App />\n    </GlobalStoreContext.Provider>\n  )\n}*/\nReactDOM.render(\n  <React.StrictMode>  \n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}